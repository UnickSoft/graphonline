version=pmwiki-2.2.75 ordered=1 urlencoded=1
agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36
author=ZAP
charset=UTF-8
csum=ZAP
ctime=1478122943
host=188.255.35.115
name=Help.FindEulerianCycle
rev=13
targets=
text=
time=1707847609
author:1707847609=ZAP
csum:1707847609=ZAP
diff:1707847609:1707847589:minor=
host:1707847609=188.255.35.115
author:1707847589=ZAP
csum:1707847589=ZAP
diff:1707847589:1707847569:cWindowssystemini=
host:1707847589=188.255.35.115
author:1707847569=cWindowssystemini
csum:1707847569=ZAP
diff:1707847569:1707847549:minor=
host:1707847569=188.255.35.115
author:1707847549=ZAP
csum:1707847549=/WEB-INF/web.xml
diff:1707847549:1707847484:minor=
host:1707847549=188.255.35.115
author:1707847484=ZAP
csum:1707847484=ZAP
diff:1707847484:1707847472:minor=0a1,26%0a> (:Title Search of  Eulerian cycle :)%0a> (:Description How you can find Eulerian cycle using graphonline service :)%0a> %0a> !!  Eulerian cycle%0a> %0a> Eulerian cycle, or circuit is a closed path which visits every edge of a graph just once. %0a>  %0a> !! Search algorithm%0a> %0a> Graphonline.ru uses search algorithm based on cycles. %0a> %0a> ''Let’s consider the general case, the case of oriented multigraph, possibly with self-loops. Moreover, we assume that there is a eulerian path in the graph and it consists of one vertex at least. In order to find the eulerian trail we will take into account that a eulerian path is the aggregation of all simple cycles of the graph. Consequently, our task is to find all the cycles effectively and combine them into one, effectively as well. ''%0a> %0a> Besides, before searching for a cycle, the service checks whether a cycle exists or not. In this regard there is a search of vertices degree. %0a> %0a> You may find more detailed information about the algorithm in Wikipedia. %0a> %0a> The implementation of the algorithm in C++ may be found in our repository on GitHub: [[https://github.com/UnickSoft/GraphOffline/blob/master/algorithm/EulerianLoop.cpp | The implementation of Eulerian trail search in Graphoffline]].%0a> %0a> !! How to use %0a> %0a> # Create a graph.%0a> # Select “Find Eulerian cycle” in the menu bar. %0a> %0a> http://graphonline.ru/en/wiki/uploads/Help/graphonline_ru_en_eulerian_cycle.gif%0a> %0a
host:1707847484=188.255.35.115
author:1707847472=ZAP
csum:1707847472=ZAP
diff:1707847472:1707847422:minor=
host:1707847472=188.255.35.115
author:1707847422=ZAP
csum:1707847422=ZAP
diff:1707847422:1707826645:minor=
host:1707847422=188.255.35.115
author:1707826645=ZAP
csum:1707826645=ZAP
diff:1707826645:1707826109:minor=
diff:1707826645:1707826645:minor=
host:1707826645=188.255.35.115
author:1707826109=ZAP
csum:1707826109=ZAP
diff:1707826109:1478345509:minor=
diff:1707826109:1707826109:minor=
host:1707826109=188.255.35.115
author:1478345509=
diff:1478345509:1478122943:=25d24%0a%3c http://graphonline.ru/en/wiki/uploads/Help/graphonline_ru_en_eulerian_cycle.gif%0a
host:1478345509=82.145.220.53
author:1478122943=
diff:1478122943:1478122943:=1,25d0%0a%3c (:Title Search of  Eulerian cycle :)%0a%3c (:Description How you can find Eulerian cycle using graphonline service :)%0a%3c %0a%3c !!  Eulerian cycle%0a%3c %0a%3c Eulerian cycle, or circuit is a closed path which visits every edge of a graph just once. %0a%3c  %0a%3c !! Search algorithm%0a%3c %0a%3c Graphonline.ru uses search algorithm based on cycles. %0a%3c %0a%3c ''Let’s consider the general case, the case of oriented multigraph, possibly with self-loops. Moreover, we assume that there is a eulerian path in the graph and it consists of one vertex at least. In order to find the eulerian trail we will take into account that a eulerian path is the aggregation of all simple cycles of the graph. Consequently, our task is to find all the cycles effectively and combine them into one, effectively as well. ''%0a%3c %0a%3c Besides, before searching for a cycle, the service checks whether a cycle exists or not. In this regard there is a search of vertices degree. %0a%3c %0a%3c You may find more detailed information about the algorithm in Wikipedia. %0a%3c %0a%3c The implementation of the algorithm in C++ may be found in our repository on GitHub: [[https://github.com/UnickSoft/GraphOffline/blob/master/algorithm/EulerianLoop.cpp | The implementation of Eulerian trail search in Graphoffline]].%0a%3c %0a%3c !! How to use %0a%3c %0a%3c # Create a graph.%0a%3c # Select “Find Eulerian cycle” in the menu bar. %0a%3c %0a%3c %0a
host:1478122943=82.145.221.45
